// Mocks generated by Mockito 5.4.6 from annotations
// in crudrepo/test/crudrepo_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:crudrepo/src/repositories/crud_repository.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;
import 'package:result_dart/result_dart.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [CrudRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCrudRepository<T extends Object> extends _i1.Mock
    implements _i2.CrudRepository<T> {
  MockCrudRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.ResultDart<List<T>, Exception>> getAllItems() =>
      (super.noSuchMethod(
            Invocation.method(#getAllItems, []),
            returnValue: _i3.Future<_i4.ResultDart<List<T>, Exception>>.value(
              _i5.dummyValue<_i4.ResultDart<List<T>, Exception>>(
                this,
                Invocation.method(#getAllItems, []),
              ),
            ),
          )
          as _i3.Future<_i4.ResultDart<List<T>, Exception>>);

  @override
  _i3.Future<_i4.ResultDart<T, Exception>> getItem(int? idItem) =>
      (super.noSuchMethod(
            Invocation.method(#getItem, [idItem]),
            returnValue: _i3.Future<_i4.ResultDart<T, Exception>>.value(
              _i5.dummyValue<_i4.ResultDart<T, Exception>>(
                this,
                Invocation.method(#getItem, [idItem]),
              ),
            ),
          )
          as _i3.Future<_i4.ResultDart<T, Exception>>);

  @override
  _i3.Future<_i4.ResultDart<T, Exception>> createItem(T? item) =>
      (super.noSuchMethod(
            Invocation.method(#createItem, [item]),
            returnValue: _i3.Future<_i4.ResultDart<T, Exception>>.value(
              _i5.dummyValue<_i4.ResultDart<T, Exception>>(
                this,
                Invocation.method(#createItem, [item]),
              ),
            ),
          )
          as _i3.Future<_i4.ResultDart<T, Exception>>);

  @override
  _i3.Future<_i4.ResultDart<T, Exception>> replaceItem(T? item) =>
      (super.noSuchMethod(
            Invocation.method(#replaceItem, [item]),
            returnValue: _i3.Future<_i4.ResultDart<T, Exception>>.value(
              _i5.dummyValue<_i4.ResultDart<T, Exception>>(
                this,
                Invocation.method(#replaceItem, [item]),
              ),
            ),
          )
          as _i3.Future<_i4.ResultDart<T, Exception>>);

  @override
  _i3.Future<_i4.ResultDart<T, Exception>> updateItem({
    required int? id,
    required Map<String, dynamic>? json,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateItem, [], {#id: id, #json: json}),
            returnValue: _i3.Future<_i4.ResultDart<T, Exception>>.value(
              _i5.dummyValue<_i4.ResultDart<T, Exception>>(
                this,
                Invocation.method(#updateItem, [], {#id: id, #json: json}),
              ),
            ),
          )
          as _i3.Future<_i4.ResultDart<T, Exception>>);

  @override
  _i3.Future<_i4.ResultDart<int, Exception>> deleteItem(int? idItem) =>
      (super.noSuchMethod(
            Invocation.method(#deleteItem, [idItem]),
            returnValue: _i3.Future<_i4.ResultDart<int, Exception>>.value(
              _i5.dummyValue<_i4.ResultDart<int, Exception>>(
                this,
                Invocation.method(#deleteItem, [idItem]),
              ),
            ),
          )
          as _i3.Future<_i4.ResultDart<int, Exception>>);

  @override
  _i3.Future<_i4.ResultDart<List<T>, Exception>> customGetItems(
    Map<String, dynamic>? filters,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#customGetItems, [filters]),
            returnValue: _i3.Future<_i4.ResultDart<List<T>, Exception>>.value(
              _i5.dummyValue<_i4.ResultDart<List<T>, Exception>>(
                this,
                Invocation.method(#customGetItems, [filters]),
              ),
            ),
          )
          as _i3.Future<_i4.ResultDart<List<T>, Exception>>);

  @override
  _i3.Future<_i4.ResultDart<int, Exception>> deleteAll() =>
      (super.noSuchMethod(
            Invocation.method(#deleteAll, []),
            returnValue: _i3.Future<_i4.ResultDart<int, Exception>>.value(
              _i5.dummyValue<_i4.ResultDart<int, Exception>>(
                this,
                Invocation.method(#deleteAll, []),
              ),
            ),
          )
          as _i3.Future<_i4.ResultDart<int, Exception>>);
}
